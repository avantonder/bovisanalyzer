/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// General configuration options
//

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}

//
// Pipeline options
//

process {
    withName: 'BWA_INDEX' {
        publishDir = [
            path: { "${params.outdir}/bwa/index" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'FASTQSCAN' {
        publishDir = [
            path: { "${params.outdir}/fastqscan" },
            mode: params.publish_dir_mode,
            pattern: '*.json'
        ]
    }
}

if (!params.skip_fastqc) {
    process {
        withName: '.*:.*:FASTQC_FASTP:FASTQC_RAW' {
            ext.args = '--quiet'
            publishDir = [
                path: { "${params.outdir}/fastqc/raw" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

if (!params.skip_fastp) {
    process {
        withName: 'FASTP' {
            ext.args = '--cut_front --cut_tail --trim_poly_x --cut_mean_quality 30 --qualified_quality_phred 30 --unqualified_percent_limit 10 --length_required 50'
            publishDir = [
                [
                    path: { "${params.outdir}/fastp" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{json,html}"
                ],
                [
                    path: { "${params.outdir}/fastp/log" },
                    mode: params.publish_dir_mode,
                    pattern: "*.log"
                ],
                [
                    path: { "${params.outdir}/fastp" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fail.fastq.gz",
                    enabled: params.save_trimmed_fail
                ]
            ]
        }

        withName: 'MULTIQC_TSV_FAIL_READS' {
            publishDir = [
                path: { "${params.outdir}/multiqc" },
                enabled: false
            ]
        }
    }

    if (!params.skip_fastqc) {
        process {
            withName: '.*:.*:FASTQC_FASTP:FASTQC_TRIM' {
                ext.args = '--quiet'
                publishDir = [
                    path: { "${params.outdir}/fastqc/trim" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }
}

process {
    withName: 'KRAKEN2_KRAKEN2' {
        ext.args = '--report-zero-counts'
        publishDir = [
            path: { "${params.outdir}/kraken2" },
            mode: params.publish_dir_mode,
            pattern: '*.txt'
        ]
    }

    withName: 'BRACKEN_BRACKEN' {
        ext.args = '-l S -t 10'
        publishDir = [
            path: { "${params.outdir}/bracken" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }

    withName: 'KRAKENPARSE' {
        publishDir = [
            path: { "${params.outdir}/species_composition" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }

    withName: '.*:SUB_SAMPLING:MASH_SKETCH' {
        ext.args = '-k 32 -m 3'
        publishDir = [
            path: { "${params.outdir}/mash" },
            mode: params.publish_dir_mode,
            pattern: '*.{mash_stats,msh}'
        ]
    }

    withName: '.*:SUB_SAMPLING:RASUSA' {
        ext.args = '--seed 23032021'
        publishDir = [
            path: { "${params.outdir}/rasusa" },
            mode: params.publish_dir_mode,
            pattern: '*.fastq.gz'
        ]
    }

    withName: 'TBPROFILER_PROFILE' {
        publishDir = [
            path: { "${params.outdir}/tbprofiler" },
            mode: params.publish_dir_mode,
            pattern: 'results/*.{csv,json,txt}'
        ]
    }

    withName: 'TBPROFILER_COLLATE' {
        publishDir = [
            path: { "${params.outdir}/tbprofiler" },
            mode: params.publish_dir_mode,
            pattern: '*.{json,txt}'
        ]
    }

    withName: 'SPOTYPING' {
        ext.args = '--noQuery'
        publishDir = [
            path: { "${params.outdir}/spotyping" },
            mode: params.publish_dir_mode,
            pattern: '*.txt'
        ]
    }

    withName: 'SPOLIGOPARSE' {
        publishDir = [
            path: { "${params.outdir}/spotyping" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }

    withName: 'METADATA_COLLATE' {
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }

    withName: 'BWA_MEM' {
        ext.args2 = '-F 4'
        publishDir = [
            path: { "${params.outdir}/bwa" },
            enabled: false
        ]
    }

    withName: '.*:BAM_SORT_SAMTOOLS:SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.sorted" }
        publishDir = [
            path: { "${params.outdir}/samtools" },
            mode: params.publish_dir_mode,
            pattern: '*.bam'
        ]
    }

    withName: '.*:BAM_SORT_SAMTOOLS:SAMTOOLS_INDEX' {
        publishDir = [
            path: { "${params.outdir}/samtools" },
            mode: params.publish_dir_mode,
            pattern: '*.bai'
        ]
    }

    withName: '.*:BAM_SORT_SAMTOOLS:BAM_STATS_SAMTOOLS' {
        publishDir = [
            path: { "${params.outdir}/samtools_stats" },
            mode: params.publish_dir_mode,
            pattern: '*.{stats,flagstat,idxstats}'
        ]
    }

    withName: '.*:VARIANTS_BCFTOOLS:BCFTOOLS_MPILEUP' {
        ext.args = '--min-BQ 20 --annotate FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/DP,FORMAT/SP,INFO/AD,INFO/ADF,INFO/ADR'
        ext.args2    = '--ploidy 1 --multiallelic-caller'
        publishDir = [
            path: { "${params.outdir}/variants" },
            mode: params.publish_dir_mode,
            pattern: '*.{gz,gz.tbi,txt}'
        ]
    }

    withName: '.*:VARIANTS_BCFTOOLS:BCFTOOLS_FILTER' {
        ext.args = '--soft-filter LowQual --exclude "%QUAL<25 || FORMAT/DP<10 || MAX(FORMAT/ADF)<2 || MAX(FORMAT/ADR)<2 || MAX(FORMAT/AD)/SUM(FORMAT/DP)<0.9 || MQ<30 || MQ0F>0.1" --output-type z'
        ext.prefix = { "${meta.id}.filtered" }
        publishDir = [
            path: { "${params.outdir}/variants" },
            mode: params.publish_dir_mode,
            pattern: '*.gz'
        ]
    }

    withName: 'VCF2PSEUDOGENOME' {
        publishDir = [
            path: { "${params.outdir}/pseudogenomes" },
            mode: params.publish_dir_mode,
            pattern: '*.fas'
        ]
    }

    withName: 'ALIGNPSEUDOGENOMES' {
        publishDir = [
            path: { "${params.outdir}/pseudogenomes" },
            mode: params.publish_dir_mode,
            pattern: '*.fas'
        ]
    }

    withName: 'REMOVE_BLOCKS' {
        publishDir = [
            path: { "${params.outdir}/pseudogenomes" },
            mode: params.publish_dir_mode,
            pattern: '*.fas'
        ]
    }

    withName: 'SNPSITES' {
        publishDir = [
            path: { "${params.outdir}/pseudogenomes" },
            mode: params.publish_dir_mode,
            pattern: '*.{fas,txt}'
        ]
    }

    withName: 'MULTIQC' {
        ext.args = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            pattern: 'multiqc*'
        ]
    }
}